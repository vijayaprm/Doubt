{"ast":null,"code":"import mongoose from \"mongoose\";\nimport users from \"../models/auth.js\";\nexport const getAllUsers = async (req, res) => {\n  try {\n    const allUsers = await users.find();\n    const allUserDetails = [];\n    allUsers.forEach(user => {\n      allUserDetails.push({\n        _id: user._id,\n        name: user.name,\n        about: user.about,\n        tags: user.tags,\n        joinedOn: user.joinedOn\n      });\n    });\n    res.status(200).json(allUserDetails);\n  } catch (error) {\n    res.status(404).json({\n      message: error.message\n    });\n  }\n};\nexport const updateProfile = async (req, res) => {\n  const {\n    id: _id\n  } = req.params;\n  const {\n    name,\n    about,\n    tags\n  } = req.body;\n  if (!mongoose.Types.ObjectId.isValid(_id)) {\n    return res.status(404).send(\"question unavailable...\");\n  }\n  try {\n    const updatedProfile = await users.findByIdAndUpdate(_id, {\n      $set: {\n        name: name,\n        about: about,\n        tags: tags\n      }\n    }, {\n      new: true\n    });\n    res.status(200).json(updatedProfile);\n  } catch (error) {\n    res.status(405).json({\n      message: error.message\n    });\n  }\n};","map":{"version":3,"names":["mongoose","users","getAllUsers","req","res","allUsers","find","allUserDetails","forEach","user","push","_id","name","about","tags","joinedOn","status","json","error","message","updateProfile","id","params","body","Types","ObjectId","isValid","send","updatedProfile","findByIdAndUpdate","$set","new"],"sources":["/home/vijayaprm/Documents/sem6/react/doubt/DOUBT/client/src/components/Navbar/Navbar.jsx"],"sourcesContent":["import mongoose from \"mongoose\";\nimport users from \"../models/auth.js\";\n\nexport const getAllUsers = async (req, res) => {\n  try {\n    const allUsers = await users.find();\n    const allUserDetails = [];\n    allUsers.forEach((user) => {\n      allUserDetails.push({\n        _id: user._id,\n        name: user.name,\n        about: user.about,\n        tags: user.tags,\n        joinedOn: user.joinedOn,\n      });\n    });\n    res.status(200).json(allUserDetails);\n  } catch (error) {\n    res.status(404).json({ message: error.message });\n  }\n};\n\nexport const updateProfile = async (req, res) => {\n  const { id: _id } = req.params;\n  const { name, about, tags } = req.body;\n\n  if (!mongoose.Types.ObjectId.isValid(_id)) {\n    return res.status(404).send(\"question unavailable...\");\n  }\n\n  try {\n    const updatedProfile = await users.findByIdAndUpdate(\n      _id,\n      { $set: { name: name, about: about, tags: tags } },\n      { new: true }\n    );\n    res.status(200).json(updatedProfile);\n  } catch (error) {\n    res.status(405).json({ message: error.message });\n  }\n};"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,UAAU;AAC/B,OAAOC,KAAK,MAAM,mBAAmB;AAErC,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,EAAE;IACnC,MAAMC,cAAc,GAAG,EAAE;IACzBF,QAAQ,CAACG,OAAO,CAAEC,IAAI,IAAK;MACzBF,cAAc,CAACG,IAAI,CAAC;QAClBC,GAAG,EAAEF,IAAI,CAACE,GAAG;QACbC,IAAI,EAAEH,IAAI,CAACG,IAAI;QACfC,KAAK,EAAEJ,IAAI,CAACI,KAAK;QACjBC,IAAI,EAAEL,IAAI,CAACK,IAAI;QACfC,QAAQ,EAAEN,IAAI,CAACM;MACjB,CAAC,CAAC;IACJ,CAAC,CAAC;IACFX,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACV,cAAc,CAAC;EACtC,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdd,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEE,OAAO,EAAED,KAAK,CAACC;IAAQ,CAAC,CAAC;EAClD;AACF,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOjB,GAAG,EAAEC,GAAG,KAAK;EAC/C,MAAM;IAAEiB,EAAE,EAAEV;EAAI,CAAC,GAAGR,GAAG,CAACmB,MAAM;EAC9B,MAAM;IAAEV,IAAI;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGX,GAAG,CAACoB,IAAI;EAEtC,IAAI,CAACvB,QAAQ,CAACwB,KAAK,CAACC,QAAQ,CAACC,OAAO,CAACf,GAAG,CAAC,EAAE;IACzC,OAAOP,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACW,IAAI,CAAC,yBAAyB,CAAC;EACxD;EAEA,IAAI;IACF,MAAMC,cAAc,GAAG,MAAM3B,KAAK,CAAC4B,iBAAiB,CAClDlB,GAAG,EACH;MAAEmB,IAAI,EAAE;QAAElB,IAAI,EAAEA,IAAI;QAAEC,KAAK,EAAEA,KAAK;QAAEC,IAAI,EAAEA;MAAK;IAAE,CAAC,EAClD;MAAEiB,GAAG,EAAE;IAAK,CAAC,CACd;IACD3B,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACW,cAAc,CAAC;EACtC,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdd,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEE,OAAO,EAAED,KAAK,CAACC;IAAQ,CAAC,CAAC;EAClD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}